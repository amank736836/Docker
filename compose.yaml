name: dockertut
services:
  nodeapp:
    build:
      context: ./myapp
      # dockerfile: Dockerfile # build
      dockerfile: development.Dockerfile # dev
    container_name: dockertutapp
    environment:
      - PORT=4000
      - MONGO_URI=mongodb://admin:password@mongodb
    env_file:
      - .env.sample
    ports:
      - 4000:4000
    depends_on:
      - mongodb
    develop:
      watch:
        - path: ./myapp/package.json
          action: rebuild
        - path: ./myapp/package-lock.json
          action: rebuild
        - path: ./myapp
          target: /usr/src/app
          # action: rebuild #build
          action: sync #dev
  mongodb:
    image: mongo
    container_name: dockertutdb
    ports:
      - 27071:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - dockertutdata:/data/db
      # - dockertutdb:/data/db
      # - ./data:/data/db

  auth:
    build:
      context: ./auth
      # dockerfile: Dockerfile #  build
      dockerfile: development.Dockerfile # dev
    container_name: dockertutauth
    ports:
      - 5000:5000
    depends_on:
      - nodeapp
    environment:
      - PORT=5000
    develop:
      watch:
        - path: ./auth/package.json
          action: rebuild
        - path: ./auth/package-lock.json
          action: rebuild
        - path: ./auth
          target: /usr/src/app
          # action: rebuild #build
          action: sync #dev
  client:
    build:
      context: ./client
      # dockerfile: Dockerfile # build
      dockerfile: development.Dockerfile # dev
    container_name: dockertutclient
    ports:
      - 3000:3000
    environment:
      - SERVER_URL=http://nodeapp:4000
    depends_on:
      - auth
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
        - path: ./client/package-lock.json
          action: rebuild
        - path: ./client
          target: /usr/src/app
          # action: rebuild #build
          action: sync #dev
    # volumes:
    # - ./client:/app # mount local directory to container
volumes:
  # dockertutdb:
  dockertutdata:
    driver: local
